# -*- coding: utf-8 -*-
"""Parser.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y1SG3UWndtHebD_bILwJeHbg_iRsaOZI
"""

#getting input production rules from user
def input_rules():
    grammar_rules = {'S': [], 'B': []}

    print("Enter Grammer rules : \n")
    grammar_rules['S'].append(input("Enter 1st rule for 'S': ").strip())
    grammar_rules['S'].append(input("Enter 2st rule for 'S': ").strip())
    grammar_rules['B'].append(input("Enter 1st rule for 'B': ").strip())
    grammar_rules['B'].append(input("Enter 2st rule for 'B': ").strip())

    starting_symbol = 'S'
    return grammar_rules, starting_symbol



#check if the grammer is a simple grammer
def is_simple_grammar(grammar_rules):
    for non_terminal, rules in grammar_rules.items():
        for rule in rules:
            if rule[0] == non_terminal or rule[0] == 'B' :
                print("The Grammar isn't simple.")
                print("Try again")
                return False

            if len(rules) >= 2 and rules[0][0] == rules[1][0]:
                print("The Grammar isn't simple.")
                print("Try again")
                return False

            if len(rules) > 2 and rules[2][0] == rules[3][0]:
                print("The Grammar isn't simple.")
                print("Try again")
                return False

    print("The Grammar is simple.")
    return True


#parse the input string that user enter and check if it accepted or rejected
def parse(input_string, grammar, starting_symbol):

    stack = [starting_symbol]
    input_list = list(input_string)

    print(f"The input string: {input_list}")

    while stack:
        top = stack.pop()

        if input_list:
            current_input = input_list[0]
        else:
            current_input = None

        if top in grammar:
            matched = False
            for rule in grammar[top]:
                if rule and rule[0] == current_input:
                    stack.extend(reversed(rule))
                    matched = True
                    break

            if not matched:
                print("No matching rule found.")
                print("Your input string is Rejected.")
                return

        elif top == current_input:
            input_list.pop(0)

        else:

            print("Your input string is Rejected.")
            return



    if not input_list and not stack:
        print("Stack after processing: []")
        print("Remaining input: []")
        print("Your input string is Accepted.")
    else:
        print("Stack after processing: []")
        print(f"Remaining input: {input_list}")
        print("Your input string is Rejected.")



#main program to run parser functions
grammar = {}
starting_symbol = None

print("--- Grammars ---")
grammar, starting_symbol = input_rules()

if not is_simple_grammar(grammar):
    input_rules()

input_string = input("Enter the string want to be checked: ").strip()
parse(input_string, grammar, starting_symbol)



while True:
    print("__________________________________________________________________________________________________________\n")
    print("1- Another Grammar.")
    print("2- Another String.")
    print("3- Exit.")

    choice = input("Enter your choice: ").strip()

    if choice == '1':
        grammar, starting_symbol = input_rules()
        if not is_simple_grammar(grammar):
            continue

    elif choice == '2':
        if not grammar:
            print("Please define the grammar first.")
            continue

        input_string = input("Enter the string want to be checked: ").strip()
        parse(input_string, grammar, starting_symbol)

    elif choice == '3':
        print("Exiting the program.")
        break

    else:
        print("Invalid choice. Try again.")